---
- name: Compile backend locally
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    repo_url: https://github.com/zietzm/webgwas-backend.git
    repo_dest: webgwas-backend
    binary_dest: webgwas_backend
  tasks:
    - name: Clone or update the webgwas-backend repository
      git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dest }}"
        depth: 1
      register: git_repo

    - name: Check if the binary exists
      stat:
        path: "{{ binary_dest }}"
      register: binary_stat

    - name: Compile the backend if there are changes or binary is missing
      shell: |
        cargo zigbuild --release --bin webgwas-backend --target aarch64-unknown-linux-gnu
        mv target/aarch64-unknown-linux-gnu/release/webgwas-backend ../{{ binary_dest }}
      args:
        chdir: "{{ repo_dest }}"
      when: git_repo.before != git_repo.after or not binary_stat.stat.exists

- name: Deploy WebGWAS
  hosts: webgwas
  become: yes
  vars:
    nginx_conf_path: "/etc/nginx/conf.d/webgwas.conf"
    nginx_basic_conf_file: "nginx-basic.conf"
    nginx_conf_file: "nginx.conf"
    frontend_repo_url: https://github.com/zietzm/webgwas-frontend.git
    frontend_repo_dest: /root/webgwas-frontend
    backend_binary_dest: /root/webgwas_backend
  tasks:
    - name: Update and upgrade packages
      dnf:
        update_cache: yes
        name: '*'
        state: latest

    - name: Install required packages
      dnf:
        name:
          - nginx
          - perl-FindBin
          - perl-core
          - tmux
          - htop
          - sqlite
          - curl
          - cronie
          - nodejs
        state: present

    - name: Copy Nginx config file
      template:
        src: "{{ nginx_basic_conf_file }}.j2"
        dest: "{{ nginx_conf_path }}"
        owner: root
        group: root
        mode: '0644'
      notify: Reload Nginx

    - name: Ensure default Nginx config is removed
      file:
        path: /etc/nginx/conf.d/default.conf
        state: absent
      notify: Reload Nginx

    - name: Ensure Nginx is started and enabled
      systemd:
        name: nginx
        state: started
        enabled: yes

    - name: Install Bun
      shell: |
        if [ ! -d "/root/.bun" ]; then
          curl -fsSL https://bun.sh/install | bash
        fi
      args:
        executable: /bin/bash

    - name: Clone or update the frontend repository
      git:
        repo: "{{ frontend_repo_url }}"
        dest: "{{ frontend_repo_dest }}"
        version: main
        update: yes
        force: yes
        accept_hostkey: yes

    - name: Install frontend dependencies
      shell: |
        /root/.bun/bin/bun install --frozen-lockfile
      args:
        chdir: "{{ frontend_repo_dest }}"

    - name: Build the frontend
      shell: |
        /root/.bun/bin/bun run next build
      args:
        chdir: "{{ frontend_repo_dest }}"
      environment:
        NEXT_PUBLIC_API_URL: "https://webgwas.org/api"

    - name: Copy frontend systemd service file
      template:
        src: frontend.service
        dest: /etc/systemd/system/frontend.service
        owner: root
        group: root
        mode: '0644'
      notify: Reload systemd

    - name: Enable and restart frontend service
      systemd:
        name: frontend
        state: restarted
        enabled: yes

    - name: Obtain and install SSL certificate
      shell:
        uvx --with certbot --with certbot-nginx certbot --nginx -d webgwas.org -d www.webgwas.org --non-interactive --agree-tos --email michael.zietz@gmail.com
      args:
        executable: /bin/bash
        creates: /etc/letsencrypt/live/webgwas.org/fullchain.pem

    - name: Ensure Certbot renew timer is enabled
      cron:
        name: "Certbot Renew"
        minute: "0"
        hour: "0,12"
        user: root
        job: '/opt/certbot/bin/python -c "import random; import time; time.sleep(random.random() * 3600)" && sudo certbot renew -q'

    - name: Copy full Nginx config file
      template:
        src: "{{ nginx_conf_file }}.j2"
        dest: "{{ nginx_conf_path }}"
        owner: root
        group: root
        mode: '0644'
      notify: Reload Nginx

    - name: Sync data from S3 to EC2
      shell: |
        aws s3 sync s3://webgwas/webgwas/ /root/webgwas/ --delete

    - name: Copy backend binary
      copy:
        src: webgwas_backend
        dest: "{{ backend_binary_dest }}"
        owner: root
        group: root
        mode: '0755'

    - name: Make the backend executable
      file:
        path: "{{ backend_binary_dest }}"
        mode: '0755'

    - name: Copy settings file
      copy:
        src: webgwas-backend/settings.toml
        dest: /root/settings.toml
        owner: root
        group: root
        mode: '0644'

    - name: Copy backend systemd service file
      copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service
        owner: root
        group: root
        mode: '0644'
      notify: Reload systemd

    - name: Enable and restart backend service
      systemd:
        name: backend
        state: restarted
        enabled: yes

  handlers:
    - name: Reload Nginx
      systemd:
        name: nginx
        state: reloaded

    - name: Reload systemd
      systemd:
        daemon_reload: yes
