# Include the default Nginx mime types
include /etc/nginx/mime.types;

# Rate limiting configuration
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=1r/s;

# Redirect all HTTP requests to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name webgwas.org www.webgwas.org;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server block for webgwas.org
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name webgwas.org www.webgwas.org;

    # SSL configuration for webgwas.org
    ssl_certificate /etc/letsencrypt/live/webgwas.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/webgwas.org/privkey.pem;

    # Recommended SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # Frontend application
    location / {
        proxy_pass http://localhost:3000;  # Adjust the port if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Backend API
    location /api/ {
        # Rate limiting
        limit_req zone=api_limit burst=1;

        # Remove the /api prefix before passing the request to the backend
        rewrite ^/api/?(.*)$ /$1 break;

        proxy_pass http://localhost:8000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,\
If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,\
If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}
